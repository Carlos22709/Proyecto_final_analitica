import streamlit as st
import pandas as pd
import numpy as np
import joblib

# Cargar modelo
modelo = joblib.load("modelo_hibrido.pkl")

# Variables en orden
FEATURES = [
    'EDAD', 'SEXO_NACIMIENTO', 'ETNIA', 'DPTO',
    'MAXIMO_NIVEL_EDUCATIVO', 'OCUPACION',
    'EXISTENCIA_CONTRATO', 'HORAS_TRABAJO'
]

# Umbrales socioecon√≥micos realistas en COP
UMBRAL_BAJO = 1_200_000
UMBRAL_ALTO = 5_000_000

# Clasificaci√≥n en tres clases
def clasificar_ingreso(valor):
    if valor < UMBRAL_BAJO:
        return "bajo ingreso"
    elif valor < UMBRAL_ALTO:
        return "medio ingreso"
    else:
        return "alto ingreso"

# Funci√≥n de predicci√≥n
def predict_ingreso_y_clase(input_dict, best_reg):
    df_in = pd.DataFrame([input_dict], columns=FEATURES)
    cat_feats = [c for c in FEATURES if c not in ['EDAD','HORAS_TRABAJO']]
    for c in cat_feats:
        df_in[c] = df_in[c].astype(str)
    ingreso_pred = best_reg.predict(df_in)[0]
    clase_pred = clasificar_ingreso(ingreso_pred)
    return {
        'ingreso_predicho': float(ingreso_pred),
        'clase_predicha': clase_pred
    }

# Interfaz de Streamlit
st.set_page_config(page_title="Predicci√≥n de Ingreso", layout="centered")
st.title("üîç Predicci√≥n de Ingreso Mensual en Colombia")

# Diccionarios de mapeo
genero_map = {'Hombre': '1', 'Mujer': '2', 'Hombre trans': '3', 'Mujer trans': '4'}
etnia_map = {'Ind√≠gena': '1', 'Gitano (Rom)': '2', 'Raizal': '3', 'Palenquero': '4', 'Afrodescendiente': '5', 'Ninguno': '6'}
dpto_map = {'Antioquia': '5', 'Atl√°ntico': '8', 'Bogot√° D.C.': '11', 'Bol√≠var': '13', 'Boyac√°': '15', 'Caldas': '17', 'Caquet√°': '18', 'Cauca': '19', 'Cesar': '20', 'C√≥rdoba': '23', 'Cundinamarca': '25', 'Choc√≥': '27', 'Huila': '41', 'La Guajira': '44', 'Magdalena': '47', 'Meta': '50', 'Nari√±o': '52', 'Norte de Santander': '54', 'Quind√≠o': '63', 'Risaralda': '66', 'Santander': '68', 'Sucre': '70', 'Tolima': '73', 'Valle del Cauca': '76'}
ed_map = {'Ninguno': '1', 'Preescolar': '2', 'B√°sica primaria (1¬∞-5¬∞)': '3', 'B√°sica secundaria (6¬∞-9¬∞)': '4', 'Media acad√©mica (Bachillerato cl√°sico)': '5', 'Media t√©cnica (Bachillerato t√©cnico)': '6', 'Normalista': '7', 'T√©cnica profesional': '8', 'Tecnol√≥gica': '9', 'Universitaria': '10', 'Especializaci√≥n': '11', 'Maestr√≠a': '12', 'Doctorado': '13', 'No sabe / No informa': '99'}
ocup_map = {'Fuerzas militares': '0', 'Directores y gerentes': '1', 'Profesionales, cient√≠ficos e intelectuales': '2', 'T√©cnicos y profesionales de nivel medio': '3', 'Personal de apoyo administrativo': '4', 'Trabajadores de los servicios y vendedores': '5', 'Agricultores y trabajadores agropecuarios': '6', 'Oficiales, operarios, artesanos': '7', 'Operadores de m√°quinas': '8', 'Ocupaciones elementales': '9'}
contrato_map = {"S√≠": "1", "No": "0"}

# Inputs
sexo = st.selectbox("Sexo", list(genero_map.keys()))
edad = st.number_input("Edad", min_value=14, max_value=100, value=30)
etnia = st.selectbox("Grupo √âtnico", list(etnia_map.keys()))
region = st.selectbox("Departamento", list(dpto_map.keys()))
nivel_educativo = st.selectbox("Nivel Educativo", list(ed_map.keys()))
ocupacion = st.selectbox("Tipo de Ocupaci√≥n", list(ocup_map.keys()))
tipo_contrato = st.selectbox("¬øTiene contrato?", list(contrato_map.keys()))
horas_trabajo = st.slider("Horas trabajadas por semana", 0, 80, 40)

# Bot√≥n de predicci√≥n
if st.button("üîÆ Predecir Ingreso"):
    entrada = {
        'EDAD': edad,
        'SEXO_NACIMIENTO': genero_map[sexo],
        'ETNIA': etnia_map[etnia],
        'DPTO': dpto_map[region],
        'MAXIMO_NIVEL_EDUCATIVO': ed_map[nivel_educativo],
        'OCUPACION': ocup_map[ocupacion],
        'EXISTENCIA_CONTRATO': contrato_map[tipo_contrato],
        'HORAS_TRABAJO': horas_trabajo
    }

    resultado = predict_ingreso_y_clase(entrada, modelo)

    st.success(f"‚úÖ Ingreso mensual estimado: **${int(resultado['ingreso_predicho']):,} COP**")
    st.info(f"üìä Clasificaci√≥n socioecon√≥mica: **{resultado['clase_predicha'].capitalize()}**")

# Informaci√≥n
st.markdown("---")
st.subheader("‚ÑπÔ∏è Acerca de la app")
st.write("""
Aplicaci√≥n desarrollada para el Examen Final del curso de Anal√≠tica de Datos.  
Los datos provienen de la Gran Encuesta Integrada de Hogares (GEIH 2021‚Äì2024).  
El modelo estima el ingreso mensual laboral y lo clasifica como bajo, medio o alto seg√∫n umbrales socioecon√≥micos oficiales.  
**Esta predicci√≥n es referencial y no sustituye asesor√≠a profesional.**

Desarrollado por: Carlos Augusto S√°nchez Lombana, Jorge Esteban D√≠az Bernal, Laura Camila Rodr√≠guez Le√≥n.
""")
